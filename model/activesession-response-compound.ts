/* tslint:disable */
/* eslint-disable */
/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


// May contain unused imports in some cases
// @ts-ignore
import type { ActivesessionResponse } from './activesession-response';
// May contain unused imports in some cases
// @ts-ignore
import type { ActivesessionResponseCompoundApikey } from './activesession-response-compound-apikey';
// May contain unused imports in some cases
// @ts-ignore
import type { ActivesessionResponseCompoundUser } from './activesession-response-compound-user';
// May contain unused imports in some cases
// @ts-ignore
import type { FieldEActivesessionEzsign } from './field-eactivesession-ezsign';
// May contain unused imports in some cases
// @ts-ignore
import type { FieldEActivesessionEzsignaccess } from './field-eactivesession-ezsignaccess';
// May contain unused imports in some cases
// @ts-ignore
import type { FieldEActivesessionEzsignprepaid } from './field-eactivesession-ezsignprepaid';
// May contain unused imports in some cases
// @ts-ignore
import type { FieldEActivesessionOrigin } from './field-eactivesession-origin';
// May contain unused imports in some cases
// @ts-ignore
import type { FieldEActivesessionRealestateinprogress } from './field-eactivesession-realestateinprogress';
// May contain unused imports in some cases
// @ts-ignore
import type { FieldEActivesessionUsertype } from './field-eactivesession-usertype';
// May contain unused imports in some cases
// @ts-ignore
import type { FieldEActivesessionWeekdaystart } from './field-eactivesession-weekdaystart';
// May contain unused imports in some cases
// @ts-ignore
import type { FieldESystemconfigurationEzsignofficeplan } from './field-esystemconfiguration-ezsignofficeplan';
// May contain unused imports in some cases
// @ts-ignore
import type { FieldEUserEzsignaccess } from './field-euser-ezsignaccess';
// May contain unused imports in some cases
// @ts-ignore
import type { FieldEUserEzsignprepaid } from './field-euser-ezsignprepaid';

/**
 * @type ActivesessionResponseCompound
 * Payload for GET /1/object/activesession/getCurrent
 * @export
 */
/*export type ActivesessionResponseCompound = ActivesessionResponse;*/
export interface ActivesessionResponseCompound {
    /**
     * The unique ID of the Ezsignuser
     * @type {number}
     * @memberof ActivesessionResponseCompound
     */
    fkiEzsignuserID?:number 
    /**
     * Whether if Ezsign is paid by the company or not
     * @type {boolean}
     * @memberof ActivesessionResponseCompound
     */
    bSystemconfigurationEzsignpaidbyoffice?:boolean 
    /**
     * 
     * @type {FieldESystemconfigurationEzsignofficeplan}
     * @memberof ActivesessionResponseCompound
     */
    eSystemconfigurationEzsignofficeplan?:FieldESystemconfigurationEzsignofficeplan 
    /**
     * 
     * @type {FieldEUserEzsignaccess}
     * @memberof ActivesessionResponseCompound
     */
    eUserEzsignaccess:FieldEUserEzsignaccess 
    /**
     * 
     * @type {FieldEUserEzsignprepaid}
     * @memberof ActivesessionResponseCompound
     */
    eUserEzsignprepaid?:FieldEUserEzsignprepaid 
    /**
     * Whether the User\'s eZsign subscription is a trial
     * @type {boolean}
     * @memberof ActivesessionResponseCompound
     */
    bUserEzsigntrial?:boolean 
    /**
     * The eZsign prepaid expiration date
     * @type {string}
     * @memberof ActivesessionResponseCompound
     */
    dtUserEzsignprepaidexpiration?:string 
    /**
     * An array of permissions granted to the user or api key
     * @type {Array<number>}
     * @memberof ActivesessionResponseCompound
     */
    a_pkiPermissionID:Array<number> 
    /**
     * 
     * @type {ActivesessionResponseCompoundUser}
     * @memberof ActivesessionResponseCompound
     */
    objUserReal:ActivesessionResponseCompoundUser 
    /**
     * 
     * @type {ActivesessionResponseCompoundUser}
     * @memberof ActivesessionResponseCompound
     */
    objUserCloned?:ActivesessionResponseCompoundUser 
    /**
     * 
     * @type {ActivesessionResponseCompoundApikey}
     * @memberof ActivesessionResponseCompound
     */
    objApikey?:ActivesessionResponseCompoundApikey 
    /**
     * An Array of Registered modules.  These are the modules that are Licensed to be used by the User or the API Key.
     * @type {Array<string>}
     * @memberof ActivesessionResponseCompound
     */
    a_eModuleInternalname:Array<string> 
}



/**
 * @import
 * Imports Child Data Object
 */
// @ts-ignore
import { DataObjectActivesessionResponseCompoundUser } from './'
// @ts-ignore
import { DataObjectActivesessionResponseCompoundUser } from './'
// @ts-ignore
import { DataObjectActivesessionResponseCompoundApikey } from './'
// @ts-ignore
import { ValidationObjectActivesessionResponseCompoundUser } from './'
// @ts-ignore
import { ValidationObjectActivesessionResponseCompoundUser } from './'
// @ts-ignore
import { ValidationObjectActivesessionResponseCompoundApikey } from './'

/**
 * @export 
 * A ActivesessionResponseCompound Data Object with automatic temporary default value
 * Use this object only for create an empty data object to assign a response from server
 * @class DataObjectActivesessionResponseCompound
 */
export class DataObjectActivesessionResponseCompound {
    fkiEzsignuserID?:number = undefined
    bSystemconfigurationEzsignpaidbyoffice?:boolean = undefined
    eSystemconfigurationEzsignofficeplan?:FieldESystemconfigurationEzsignofficeplan = undefined
    eUserEzsignaccess:FieldEUserEzsignaccess = 'No'
    eUserEzsignprepaid?:FieldEUserEzsignprepaid = undefined
    bUserEzsigntrial?:boolean = undefined
    dtUserEzsignprepaidexpiration?:string = undefined
    a_pkiPermissionID:Array<number> = []
    objUserReal:ActivesessionResponseCompoundUser = new DataObjectActivesessionResponseCompoundUser()
    objUserCloned?:ActivesessionResponseCompoundUser = undefined
    objApikey?:ActivesessionResponseCompoundApikey = undefined
    a_eModuleInternalname:Array<string> = []
}

/**
 * @export 
 * A ActivesessionResponseCompound Validation Object
 * @class ValidationObjectActivesessionResponseCompound
 */
export class ValidationObjectActivesessionResponseCompound {
   fkiEzsignuserID = {
      type: 'integer',
      minimum: 0,
      maximum: 65535,
      required: false
   }
   bSystemconfigurationEzsignpaidbyoffice = {
      type: 'boolean',
      required: false
   }
   eSystemconfigurationEzsignofficeplan = {
      type: 'enum',
      allowableValues: ['Standard','Pro'],
      required: false
   }
   eUserEzsignaccess = {
      type: 'enum',
      allowableValues: ['No','PaidByOffice','PerDocument','Prepaid'],
      required: true
   }
   eUserEzsignprepaid = {
      type: 'enum',
      allowableValues: ['No','Basic','Standard','Pro'],
      required: false
   }
   bUserEzsigntrial = {
      type: 'boolean',
      required: false
   }
   dtUserEzsignprepaidexpiration = {
      type: 'string',
      pattern: /^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])$/,
      required: false
   }
   a_pkiPermissionID = {
      type: 'array',
      required: true
   }
   objUserReal = new ValidationObjectActivesessionResponseCompoundUser()
   objUserCloned = new ValidationObjectActivesessionResponseCompoundUser()
   objApikey = new ValidationObjectActivesessionResponseCompoundApikey()
   a_eModuleInternalname = {
      type: 'array',
      required: true
   }
} 


