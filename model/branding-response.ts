/* tslint:disable */
/* eslint-disable */
/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.17
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


// May contain unused imports in some cases
// @ts-ignore
import { FieldEBrandingLogo } from './field-ebranding-logo';
// May contain unused imports in some cases
// @ts-ignore
import { MultilingualBrandingDescription } from './multilingual-branding-description';

/**
 * A Branding Object
 * @export
 * @interface BrandingResponse
 */
export interface BrandingResponse {
    /**
     * The unique ID of the Branding
     * @type {number}
     * @memberof BrandingResponse
     */
    'pkiBrandingID': number;
    /**
     * 
     * @type {MultilingualBrandingDescription}
     * @memberof BrandingResponse
     */
    'objBrandingDescription': MultilingualBrandingDescription;
    /**
     * The Description of the Branding in the language of the requester
     * @type {string}
     * @memberof BrandingResponse
     */
    'sBrandingDescriptionX': string;
    /**
     * 
     * @type {FieldEBrandingLogo}
     * @memberof BrandingResponse
     */
    'eBrandingLogo': FieldEBrandingLogo;
    /**
     * The color of the text. This is a RGB color converted into integer
     * @type {number}
     * @memberof BrandingResponse
     */
    'iBrandingColortext': number;
    /**
     * The color of the text in the link box. This is a RGB color converted into integer
     * @type {number}
     * @memberof BrandingResponse
     */
    'iBrandingColortextlinkbox': number;
    /**
     * The color of the text in the button. This is a RGB color converted into integer
     * @type {number}
     * @memberof BrandingResponse
     */
    'iBrandingColortextbutton': number;
    /**
     * The color of the background. This is a RGB color converted into integer
     * @type {number}
     * @memberof BrandingResponse
     */
    'iBrandingColorbackground': number;
    /**
     * The color of the background of the button. This is a RGB color converted into integer
     * @type {number}
     * @memberof BrandingResponse
     */
    'iBrandingColorbackgroundbutton': number;
    /**
     * The color of the background of the small box. This is a RGB color converted into integer
     * @type {number}
     * @memberof BrandingResponse
     */
    'iBrandingColorbackgroundsmallbox': number;
    /**
     * Whether the Branding is active or not
     * @type {boolean}
     * @memberof BrandingResponse
     */
    'bBrandingIsactive': boolean;
}


/**
 * @import
 * Imports Child Data Object
 */
// @ts-ignore
import { DataObjectMultilingualBrandingDescription } from './'
// @ts-ignore
import { ValidationObjectMultilingualBrandingDescription } from './'

/**
 * @export 
 * A BrandingResponse Data Object with automatic temporary default value
 * Use this object only for create an empty data object to assign a response from server
 * @class DataObjectBrandingResponse
 */
export class DataObjectBrandingResponse {
   pkiBrandingID:number = 0
   objBrandingDescription:MultilingualBrandingDescription = new DataObjectMultilingualBrandingDescription()
   sBrandingDescriptionX:string = ''
   eBrandingLogo:FieldEBrandingLogo = 'Default'
   iBrandingColortext:number = 0
   iBrandingColortextlinkbox:number = 0
   iBrandingColortextbutton:number = 0
   iBrandingColorbackground:number = 0
   iBrandingColorbackgroundbutton:number = 0
   iBrandingColorbackgroundsmallbox:number = 0
   bBrandingIsactive:boolean = false
}

/**
 * @export 
 * A BrandingResponse Validation Object
 * @class ValidationObjectBrandingResponse
 */
export class ValidationObjectBrandingResponse {
   pkiBrandingID = {
      type: 'integer',
      minimum: 0,
      required: true
   }
   objBrandingDescription = new ValidationObjectMultilingualBrandingDescription()
   sBrandingDescriptionX = {
      type: 'string',
      required: true
   }
   eBrandingLogo = {
      type: 'enum',
      allowableValues: ['Default','JPEG','PNG'],
      required: true
   }
   iBrandingColortext = {
      type: 'integer',
      minimum: 0,
      maximum: 16777215,
      required: true
   }
   iBrandingColortextlinkbox = {
      type: 'integer',
      minimum: 0,
      maximum: 16777215,
      required: true
   }
   iBrandingColortextbutton = {
      type: 'integer',
      minimum: 0,
      maximum: 16777215,
      required: true
   }
   iBrandingColorbackground = {
      type: 'integer',
      minimum: 0,
      maximum: 16777215,
      required: true
   }
   iBrandingColorbackgroundbutton = {
      type: 'integer',
      minimum: 0,
      maximum: 16777215,
      required: true
   }
   iBrandingColorbackgroundsmallbox = {
      type: 'integer',
      minimum: 0,
      maximum: 16777215,
      required: true
   }
   bBrandingIsactive = {
      type: 'boolean',
      required: true
   }
} 


