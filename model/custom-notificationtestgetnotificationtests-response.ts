/* tslint:disable */
/* eslint-disable */
/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.2
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


// May contain unused imports in some cases
// @ts-ignore
import type { FieldENotificationpreferenceStatus } from './field-enotificationpreference-status';
// May contain unused imports in some cases
// @ts-ignore
import type { MultilingualNotificationtestName } from './multilingual-notificationtest-name';
// May contain unused imports in some cases
// @ts-ignore
import type { NotificationtestResponse } from './notificationtest-response';

/**
 * @type CustomNotificationtestgetnotificationtestsResponse
 * A Notificationtest Object in the context of getNotificationtests
 * @export
 */
/*export type CustomNotificationtestgetnotificationtestsResponse = NotificationtestResponse;*/
export interface CustomNotificationtestgetnotificationtestsResponse {
    /**
     * The unique ID of the Notificationtest
     * @type {number}
     * @memberof CustomNotificationtestgetnotificationtestsResponse
     */
    pkiNotificationtestID:number 
    /**
     * 
     * @type {MultilingualNotificationtestName}
     * @memberof CustomNotificationtestgetnotificationtestsResponse
     */
    objNotificationtestName:MultilingualNotificationtestName 
    /**
     * The unique ID of the Notificationsubsection
     * @type {number}
     * @memberof CustomNotificationtestgetnotificationtestsResponse
     */
    fkiNotificationsubsectionID:number 
    /**
     * The function name of the Notificationtest
     * @type {string}
     * @memberof CustomNotificationtestgetnotificationtestsResponse
     */
    sNotificationtestFunction:string 
    /**
     * The name of the Notificationtest in the language of the requester
     * @type {string}
     * @memberof CustomNotificationtestgetnotificationtestsResponse
     */
    sNotificationtestNameX:string 
    /**
     * 
     * @type {FieldENotificationpreferenceStatus}
     * @memberof CustomNotificationtestgetnotificationtestsResponse
     */
    eNotificationpreferenceStatus:FieldENotificationpreferenceStatus 
    /**
     * The number of elements returned by the Notificationtest
     * @type {number}
     * @memberof CustomNotificationtestgetnotificationtestsResponse
     */
    iNotificationtest:number 
}



/**
 * @import
 * Imports Child Data Object
 */
// @ts-ignore
import { DataObjectMultilingualNotificationtestName } from './'
// @ts-ignore
import { ValidationObjectMultilingualNotificationtestName } from './'

/**
 * @export 
 * A CustomNotificationtestgetnotificationtestsResponse Data Object with automatic temporary default value
 * Use this object only for create an empty data object to assign a response from server
 * @class DataObjectCustomNotificationtestgetnotificationtestsResponse
 */
export class DataObjectCustomNotificationtestgetnotificationtestsResponse {
    pkiNotificationtestID:number = 0
    objNotificationtestName:MultilingualNotificationtestName = new DataObjectMultilingualNotificationtestName()
    fkiNotificationsubsectionID:number = 0
    sNotificationtestFunction:string = ''
    sNotificationtestNameX:string = ''
    eNotificationpreferenceStatus:FieldENotificationpreferenceStatus = 'Show'
    iNotificationtest:number = 0
}

/**
 * @export 
 * A CustomNotificationtestgetnotificationtestsResponse Validation Object
 * @class ValidationObjectCustomNotificationtestgetnotificationtestsResponse
 */
export class ValidationObjectCustomNotificationtestgetnotificationtestsResponse {
   pkiNotificationtestID = {
      type: 'integer',
      minimum: 0,
      required: true
   }
   objNotificationtestName = new ValidationObjectMultilingualNotificationtestName()
   fkiNotificationsubsectionID = {
      type: 'integer',
      minimum: 0,
      required: true
   }
   sNotificationtestFunction = {
      type: 'string',
      required: true
   }
   sNotificationtestNameX = {
      type: 'string',
      required: true
   }
   eNotificationpreferenceStatus = {
      type: 'enum',
      allowableValues: ['Show','Hide','Pin'],
      required: true
   }
   iNotificationtest = {
      type: 'integer',
      required: true
   }
} 


