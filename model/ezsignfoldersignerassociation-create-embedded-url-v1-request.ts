/* tslint:disable */
/* eslint-disable */
/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.2
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



/**
 * Request for POST /1/object/ezsignfoldersignerassociation/createEmbeddedUrl
 * @export
 * @interface EzsignfoldersignerassociationCreateEmbeddedUrlV1Request
 */
export interface EzsignfoldersignerassociationCreateEmbeddedUrlV1Request {
    /**
     * The return Url to redirect after the signing is completed  **Warning** Due to the potential for Ezsignsigners to cancel redirection, close their browser post-signing, or spoof the landing URL, it\'s advisable not to solely depend on the sReturnUrl for accurate status within your integration.  Once the Ezsignsigner finishes, they are directed back to your application. Your application can retain transaction state details by either storing data in a cookie or incorporating query parameters in the sReturnUrl. For example: https://www.example.com/sReturnUrl?sSessionID=ABC123  The actual url that will be called will have an extra url parameter appended to give details about the process. The possible values are listed in the table below. For example: https://www.example.com/sReturnUrl?sSessionID=ABC123&eEzsignEvent=CompletedEzsignfolder   |**Query parameters appended**| |---| |eEzsignEvent|   |**eEzsignEvent**|**Description**| |---|---| |SessionTimeout|The session timed out| |SessionLogout|The Ezsignsigner signed out| |DeclinedTermOfUse|The Ezsignsigner refused the terms| |DeclinedSign|The Ezsignsigner refused to sign| |Reassigned|The Ezsignsigner reassigned his signatures to someone else| |CompletedStep|The Ezsignsigner completed his step. There is other signatures to complete the Ezsigndocument| |CompletedEzsignfolder|The Ezsignfolder is completed. Everyone signed their signatures|
     * @type {string}
     * @memberof EzsignfoldersignerassociationCreateEmbeddedUrlV1Request
     */
    /*'sReturnUrl'?: string;*/
    'sReturnUrl'?: string;
    /**
     * Domain protection for the iFrame
     * @type {string}
     * @memberof EzsignfoldersignerassociationCreateEmbeddedUrlV1Request
     */
    /*'sIframedomain'?: string;*/
    'sIframedomain'?: string;
    /**
     * Whether the url would be in an iFrame or not
     * @type {boolean}
     * @memberof EzsignfoldersignerassociationCreateEmbeddedUrlV1Request
     */
    /*'bIsIframe'?: boolean;*/
    'bIsIframe'?: boolean;
}
/**
 * @import
 * Imports Child Data Object
 */

/**
 * @export 
 * A EzsignfoldersignerassociationCreateEmbeddedUrlV1Request Data Object with automatic temporary default value
 * Use this object only for create an empty data object to assign a response from server
 * @class DataObjectEzsignfoldersignerassociationCreateEmbeddedUrlV1Request
 */
export class DataObjectEzsignfoldersignerassociationCreateEmbeddedUrlV1Request {
   sReturnUrl?:string = undefined
   sIframedomain?:string = undefined
   bIsIframe?:boolean = undefined
}

/**
 * @export 
 * A EzsignfoldersignerassociationCreateEmbeddedUrlV1Request Validation Object
 * @class ValidationObjectEzsignfoldersignerassociationCreateEmbeddedUrlV1Request
 */
export class ValidationObjectEzsignfoldersignerassociationCreateEmbeddedUrlV1Request {
   sReturnUrl = {
      type: 'string',
      pattern: /^(https|http):\/\/[^\s\/$.?#].[^\s]*$/,
      required: false
   }
   sIframedomain = {
      type: 'string',
      required: false
   }
   bIsIframe = {
      type: 'boolean',
      required: false
   }
} 


