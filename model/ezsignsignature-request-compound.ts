/* tslint:disable */
/* eslint-disable */
/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


// May contain unused imports in some cases
// @ts-ignore
import type { EnumTextvalidation } from './enum-textvalidation';
// May contain unused imports in some cases
// @ts-ignore
import type { EzsignelementdependencyRequest } from './ezsignelementdependency-request';
// May contain unused imports in some cases
// @ts-ignore
import type { EzsignsignatureRequest } from './ezsignsignature-request';
// May contain unused imports in some cases
// @ts-ignore
import type { EzsignsignaturecustomdateRequest } from './ezsignsignaturecustomdate-request';
// May contain unused imports in some cases
// @ts-ignore
import type { FieldEEzsignsignatureAttachmentnamesource } from './field-eezsignsignature-attachmentnamesource';
// May contain unused imports in some cases
// @ts-ignore
import type { FieldEEzsignsignatureConsultationtrigger } from './field-eezsignsignature-consultationtrigger';
// May contain unused imports in some cases
// @ts-ignore
import type { FieldEEzsignsignatureDependencyrequirement } from './field-eezsignsignature-dependencyrequirement';
// May contain unused imports in some cases
// @ts-ignore
import type { FieldEEzsignsignatureFont } from './field-eezsignsignature-font';
// May contain unused imports in some cases
// @ts-ignore
import type { FieldEEzsignsignatureTooltipposition } from './field-eezsignsignature-tooltipposition';
// May contain unused imports in some cases
// @ts-ignore
import type { FieldEEzsignsignatureType } from './field-eezsignsignature-type';

/**
 * @type EzsignsignatureRequestCompound
 * An Ezsignsignature Object and children to create a complete structure
 * @export
 */
/*export type EzsignsignatureRequestCompound = EzsignsignatureRequest;*/
export interface EzsignsignatureRequestCompound {
    /**
     * Whether the Ezsignsignature has a custom date format or not. (Only possible when eEzsignsignatureType is **Name** or **Handwritten**)
     * @type {boolean}
     * @memberof EzsignsignatureRequestCompound
     */
    bEzsignsignatureCustomdate?:boolean 
    /**
     * An array of custom date blocks that will be filled at the time of signature.  Can only be used if bEzsignsignatureCustomdate is true.  Use an empty array if you don\'t want to have a date at all.
     * @type {Array<EzsignsignaturecustomdateRequestCompound>}
     * @memberof EzsignsignatureRequestCompound
     */
    a_objEzsignsignaturecustomdate?:Array<EzsignsignaturecustomdateRequestCompound> 
    /**
     * 
     * @type {Array<EzsignelementdependencyRequestCompound>}
     * @memberof EzsignsignatureRequestCompound
     */
    a_objEzsignelementdependency?:Array<EzsignelementdependencyRequestCompound> 
}



/**
 * @import
 * Imports Child Data Object
 */

/**
 * @export 
 * A EzsignsignatureRequestCompound Data Object with automatic temporary default value
 * Use this object only for create an empty data object to assign a response from server
 * @class DataObjectEzsignsignatureRequestCompound
 */
export class DataObjectEzsignsignatureRequestCompound {
    bEzsignsignatureCustomdate?:boolean = undefined
    a_objEzsignsignaturecustomdate?:Array<EzsignsignaturecustomdateRequestCompound> = undefined
    a_objEzsignelementdependency?:Array<EzsignelementdependencyRequestCompound> = undefined
}

/**
 * @export 
 * A EzsignsignatureRequestCompound Validation Object
 * @class ValidationObjectEzsignsignatureRequestCompound
 */
export class ValidationObjectEzsignsignatureRequestCompound {
   bEzsignsignatureCustomdate = {
      type: 'boolean',
      required: false
   }
   a_objEzsignsignaturecustomdate = {
      type: 'array',
      required: false
   }
   a_objEzsignelementdependency = {
      type: 'array',
      required: false
   }
} 


