/* tslint:disable */
/* eslint-disable */
/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


// May contain unused imports in some cases
// @ts-ignore
import { ApikeyResponse } from './apikey-response';
// May contain unused imports in some cases
// @ts-ignore
import { CommonAudit } from './common-audit';
// May contain unused imports in some cases
// @ts-ignore
import { CustomContactNameResponse } from './custom-contact-name-response';
// May contain unused imports in some cases
// @ts-ignore
import { MultilingualApikeyDescription } from './multilingual-apikey-description';

/**
 * @type ApikeyResponseCompound
 * An Apikey Object and children to create a complete structure
 * @export
 */
/*export type ApikeyResponseCompound = ApikeyResponse;*/
export interface ApikeyResponseCompound {
    /**
     * The unique ID of the Apikey
     * @type {number}
     * @memberof ApikeyResponseCompound
     */
    pkiApikeyID:number 
    /**
     * The unique ID of the User
     * @type {number}
     * @memberof ApikeyResponseCompound
     */
    fkiUserID:number 
    /**
     * 
     * @type {MultilingualApikeyDescription}
     * @memberof ApikeyResponseCompound
     */
    objApikeyDescription:MultilingualApikeyDescription 
    /**
     * 
     * @type {CustomContactNameResponse}
     * @memberof ApikeyResponseCompound
     */
    objContactName:CustomContactNameResponse 
    /**
     * The Apikey for the API key.  This will be hidden if we are not creating or regenerating the Apikey.
     * @type {string}
     * @memberof ApikeyResponseCompound
     */
    sApikeyApikey?:string 
    /**
     * The Secret for the API key.  This will be hidden if we are not creating or regenerating the Apikey.
     * @type {string}
     * @memberof ApikeyResponseCompound
     */
    sApikeySecret?:string 
    /**
     * Whether the apikey is active or not
     * @type {boolean}
     * @memberof ApikeyResponseCompound
     */
    bApikeyIsactive:boolean 
    /**
     * Whether the apikey is signed or not
     * @type {boolean}
     * @memberof ApikeyResponseCompound
     */
    bApikeyIssigned?:boolean 
    /**
     * 
     * @type {CommonAudit}
     * @memberof ApikeyResponseCompound
     */
    objAudit:CommonAudit 
}


/**
 * @import
 * Imports Child Data Object
 */
// @ts-ignore
import { DataObjectMultilingualApikeyDescription } from './'
// @ts-ignore
import { DataObjectCustomContactNameResponse } from './'
// @ts-ignore
import { DataObjectCommonAudit } from './'
// @ts-ignore
import { ValidationObjectMultilingualApikeyDescription } from './'
// @ts-ignore
import { ValidationObjectCustomContactNameResponse } from './'
// @ts-ignore
import { ValidationObjectCommonAudit } from './'

/**
 * @export 
 * A ApikeyResponseCompound Data Object with automatic temporary default value
 * Use this object only for create an empty data object to assign a response from server
 * @class DataObjectApikeyResponseCompound
 */
export class DataObjectApikeyResponseCompound {
    pkiApikeyID:number = 0
    fkiUserID:number = 0
    objApikeyDescription:MultilingualApikeyDescription = new DataObjectMultilingualApikeyDescription()
    objContactName:CustomContactNameResponse = new DataObjectCustomContactNameResponse()
    sApikeyApikey?:string = undefined
    sApikeySecret?:string = undefined
    bApikeyIsactive:boolean = false
    bApikeyIssigned?:boolean = undefined
    objAudit:CommonAudit = new DataObjectCommonAudit()
}

/**
 * @export 
 * A ApikeyResponseCompound Validation Object
 * @class ValidationObjectApikeyResponseCompound
 */
export class ValidationObjectApikeyResponseCompound {
   pkiApikeyID = {
      type: 'integer',
      minimum: 0,
      required: true
   }
   fkiUserID = {
      type: 'integer',
      minimum: 0,
      required: true
   }
   objApikeyDescription = new ValidationObjectMultilingualApikeyDescription()
   objContactName = new ValidationObjectCustomContactNameResponse()
   sApikeyApikey = {
      type: 'string',
      required: false
   }
   sApikeySecret = {
      type: 'string',
      required: false
   }
   bApikeyIsactive = {
      type: 'boolean',
      required: true
   }
   bApikeyIssigned = {
      type: 'boolean',
      required: false
   }
   objAudit = new ValidationObjectCommonAudit()
} 


