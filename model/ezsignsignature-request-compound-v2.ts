/* tslint:disable */
/* eslint-disable */
/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


// May contain unused imports in some cases
// @ts-ignore
import type { EnumTextvalidation } from './enum-textvalidation';
// May contain unused imports in some cases
// @ts-ignore
import type { EzsignelementdependencyRequest } from './ezsignelementdependency-request';
// May contain unused imports in some cases
// @ts-ignore
import type { EzsignsignatureRequest } from './ezsignsignature-request';
// May contain unused imports in some cases
// @ts-ignore
import type { EzsignsignaturecustomdateRequestV2 } from './ezsignsignaturecustomdate-request-v2';
// May contain unused imports in some cases
// @ts-ignore
import type { FieldEEzsignsignatureAttachmentnamesource } from './field-eezsignsignature-attachmentnamesource';
// May contain unused imports in some cases
// @ts-ignore
import type { FieldEEzsignsignatureConsultationtrigger } from './field-eezsignsignature-consultationtrigger';
// May contain unused imports in some cases
// @ts-ignore
import type { FieldEEzsignsignatureDependencyrequirement } from './field-eezsignsignature-dependencyrequirement';
// May contain unused imports in some cases
// @ts-ignore
import type { FieldEEzsignsignatureFont } from './field-eezsignsignature-font';
// May contain unused imports in some cases
// @ts-ignore
import type { FieldEEzsignsignatureTooltipposition } from './field-eezsignsignature-tooltipposition';
// May contain unused imports in some cases
// @ts-ignore
import type { FieldEEzsignsignatureType } from './field-eezsignsignature-type';

/**
 * @type EzsignsignatureRequestCompoundV2
 * An Ezsignsignature Object and children to create a complete structure
 * @export
 */
/*export type EzsignsignatureRequestCompoundV2 = EzsignsignatureRequest;*/
export interface EzsignsignatureRequestCompoundV2 {
    /**
     * Whether the Ezsignsignature has a custom date format or not. (Only possible when eEzsignsignatureType is **Name** or **Handwritten**)
     * @type {boolean}
     * @memberof EzsignsignatureRequestCompoundV2
     */
    bEzsignsignatureCustomdate?:boolean 
    /**
     * An array of custom date blocks that will be filled at the time of signature.  Can only be used if bEzsignsignatureCustomdate is true.  Use an empty array if you don\'t want to have a date at all.
     * @type {Array<EzsignsignaturecustomdateRequestCompoundV2>}
     * @memberof EzsignsignatureRequestCompoundV2
     */
    a_objEzsignsignaturecustomdate?:Array<EzsignsignaturecustomdateRequestCompoundV2> 
    /**
     * 
     * @type {Array<EzsignelementdependencyRequestCompound>}
     * @memberof EzsignsignatureRequestCompoundV2
     */
    a_objEzsignelementdependency?:Array<EzsignelementdependencyRequestCompound> 
}



/**
 * @import
 * Imports Child Data Object
 */

/**
 * @export 
 * A EzsignsignatureRequestCompoundV2 Data Object with automatic temporary default value
 * Use this object only for create an empty data object to assign a response from server
 * @class DataObjectEzsignsignatureRequestCompoundV2
 */
export class DataObjectEzsignsignatureRequestCompoundV2 {
    bEzsignsignatureCustomdate?:boolean = undefined
    a_objEzsignsignaturecustomdate?:Array<EzsignsignaturecustomdateRequestCompoundV2> = undefined
    a_objEzsignelementdependency?:Array<EzsignelementdependencyRequestCompound> = undefined
}

/**
 * @export 
 * A EzsignsignatureRequestCompoundV2 Validation Object
 * @class ValidationObjectEzsignsignatureRequestCompoundV2
 */
export class ValidationObjectEzsignsignatureRequestCompoundV2 {
   bEzsignsignatureCustomdate = {
      type: 'boolean',
      required: false
   }
   a_objEzsignsignaturecustomdate = {
      type: 'array',
      required: false
   }
   a_objEzsignelementdependency = {
      type: 'array',
      required: false
   }
} 


