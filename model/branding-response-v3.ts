/* tslint:disable */
/* eslint-disable */
/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


// May contain unused imports in some cases
// @ts-ignore
import { FieldEBrandingAlignlogo } from './field-ebranding-alignlogo';
// May contain unused imports in some cases
// @ts-ignore
import { FieldEBrandingLogo } from './field-ebranding-logo';
// May contain unused imports in some cases
// @ts-ignore
import { MultilingualBrandingDescription } from './multilingual-branding-description';

/**
 * A Branding Object
 * @export
 * @interface BrandingResponseV3
 */
export interface BrandingResponseV3 {
    /**
     * The unique ID of the Branding
     * @type {number}
     * @memberof BrandingResponseV3
     */
    /*'pkiBrandingID': number;*/
    'pkiBrandingID': number;
    /**
     * The unique ID of the Email
     * @type {number}
     * @memberof BrandingResponseV3
     */
    /*'fkiEmailID'?: number;*/
    'fkiEmailID'?: number;
    /**
     * 
     * @type {MultilingualBrandingDescription}
     * @memberof BrandingResponseV3
     */
    /*'objBrandingDescription': MultilingualBrandingDescription;*/
    'objBrandingDescription': MultilingualBrandingDescription;
    /**
     * The Description of the Branding in the language of the requester
     * @type {string}
     * @memberof BrandingResponseV3
     */
    /*'sBrandingDescriptionX': string;*/
    'sBrandingDescriptionX': string;
    /**
     * The name of the Branding  This value will only be set if you wish to overwrite the default name. If you want to keep the default name, leave this property empty
     * @type {string}
     * @memberof BrandingResponseV3
     */
    /*'sBrandingName'?: string;*/
    'sBrandingName'?: string;
    /**
     * The email address.
     * @type {string}
     * @memberof BrandingResponseV3
     */
    /*'sEmailAddress'?: string;*/
    'sEmailAddress'?: string;
    /**
     * 
     * @type {FieldEBrandingLogo}
     * @memberof BrandingResponseV3
     */
    /*'eBrandingLogo': FieldEBrandingLogo;*/
    'eBrandingLogo': FieldEBrandingLogo;
    /**
     * 
     * @type {FieldEBrandingAlignlogo}
     * @memberof BrandingResponseV3
     */
    /*'eBrandingAlignlogo': FieldEBrandingAlignlogo;*/
    'eBrandingAlignlogo': FieldEBrandingAlignlogo;
    /**
     * The primary color. This is a RGB color converted into integer
     * @type {number}
     * @memberof BrandingResponseV3
     */
    /*'iBrandingColor': number;*/
    'iBrandingColor': number;
    /**
     * Whether the Branding is active or not
     * @type {boolean}
     * @memberof BrandingResponseV3
     */
    /*'bBrandingIsactive': boolean;*/
    'bBrandingIsactive': boolean;
}


/**
 * @import
 * Imports Child Data Object
 */
// @ts-ignore
import { DataObjectMultilingualBrandingDescription } from './'
// @ts-ignore
import { ValidationObjectMultilingualBrandingDescription } from './'

/**
 * @export 
 * A BrandingResponseV3 Data Object with automatic temporary default value
 * Use this object only for create an empty data object to assign a response from server
 * @class DataObjectBrandingResponseV3
 */
export class DataObjectBrandingResponseV3 {
   pkiBrandingID:number = 0
   fkiEmailID?:number = undefined
   objBrandingDescription:MultilingualBrandingDescription = new DataObjectMultilingualBrandingDescription()
   sBrandingDescriptionX:string = ''
   sBrandingName?:string = undefined
   sEmailAddress?:string = undefined
   eBrandingLogo:FieldEBrandingLogo = 'Default'
   eBrandingAlignlogo:FieldEBrandingAlignlogo = 'Center'
   iBrandingColor:number = 0
   bBrandingIsactive:boolean = false
}

/**
 * @export 
 * A BrandingResponseV3 Validation Object
 * @class ValidationObjectBrandingResponseV3
 */
export class ValidationObjectBrandingResponseV3 {
   pkiBrandingID = {
      type: 'integer',
      minimum: 0,
      required: true
   }
   fkiEmailID = {
      type: 'integer',
      minimum: 1,
      maximum: 16777215,
      required: false
   }
   objBrandingDescription = new ValidationObjectMultilingualBrandingDescription()
   sBrandingDescriptionX = {
      type: 'string',
      required: true
   }
   sBrandingName = {
      type: 'string',
      pattern: /^.{0,55}$/,
      required: false
   }
   sEmailAddress = {
      type: 'string',
      pattern: /^[\w.%+\-!#$%&'*+\/=?^`{|}~]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,20}$/,
      required: false
   }
   eBrandingLogo = {
      type: 'enum',
      allowableValues: ['Default','JPEG','PNG'],
      required: true
   }
   eBrandingAlignlogo = {
      type: 'enum',
      allowableValues: ['Center','Left','Right'],
      required: true
   }
   iBrandingColor = {
      type: 'integer',
      minimum: 0,
      maximum: 16777215,
      required: true
   }
   bBrandingIsactive = {
      type: 'boolean',
      required: true
   }
} 


