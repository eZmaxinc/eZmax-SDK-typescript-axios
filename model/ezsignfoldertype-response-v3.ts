/* tslint:disable */
/* eslint-disable */
/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


// May contain unused imports in some cases
// @ts-ignore
import { FieldEEzsignfoldertypeCompletion } from './field-eezsignfoldertype-completion';
// May contain unused imports in some cases
// @ts-ignore
import { FieldEEzsignfoldertypeDisposal } from './field-eezsignfoldertype-disposal';
// May contain unused imports in some cases
// @ts-ignore
import { FieldEEzsignfoldertypePrivacylevel } from './field-eezsignfoldertype-privacylevel';
// May contain unused imports in some cases
// @ts-ignore
import { FieldEEzsignfoldertypeSendreminderfrequency } from './field-eezsignfoldertype-sendreminderfrequency';
// May contain unused imports in some cases
// @ts-ignore
import { MultilingualEzsignfoldertypeName } from './multilingual-ezsignfoldertype-name';
// May contain unused imports in some cases
// @ts-ignore
import { UsergroupResponse } from './usergroup-response';
// May contain unused imports in some cases
// @ts-ignore
import { UserlogintypeResponse } from './userlogintype-response';

/**
 * A Ezsignfoldertype Object
 * @export
 * @interface EzsignfoldertypeResponseV3
 */
export interface EzsignfoldertypeResponseV3 {
    /**
     * The unique ID of the Ezsignfoldertype.
     * @type {number}
     * @memberof EzsignfoldertypeResponseV3
     */
    /*'pkiEzsignfoldertypeID': number;*/
    'pkiEzsignfoldertypeID': number;
    /**
     * 
     * @type {MultilingualEzsignfoldertypeName}
     * @memberof EzsignfoldertypeResponseV3
     */
    /*'objEzsignfoldertypeName': MultilingualEzsignfoldertypeName;*/
    'objEzsignfoldertypeName': MultilingualEzsignfoldertypeName;
    /**
     * The unique ID of the Branding
     * @type {number}
     * @memberof EzsignfoldertypeResponseV3
     */
    /*'fkiBrandingID': number;*/
    'fkiBrandingID': number;
    /**
     * The unique ID of the Billingentityinternal.
     * @type {number}
     * @memberof EzsignfoldertypeResponseV3
     */
    /*'fkiBillingentityinternalID'?: number;*/
    'fkiBillingentityinternalID'?: number;
    /**
     * The unique ID of the Ezsigntsarequirement.  Determine if a Time Stamping Authority should add a timestamp on each of the signature. Valid values:  |Value|Description| |-|-| |1|No. TSA Timestamping will requested. This will make all signatures a lot faster since no round-trip to the TSA server will be required. Timestamping will be made using eZsign server\'s time.| |2|Best effort. Timestamping from a Time Stamping Authority will be requested but is not mandatory. In the very improbable case it cannot be completed, the timestamping will be made using eZsign server\'s time. **Additional fee applies**| |3|Mandatory. Timestamping from a Time Stamping Authority will be requested and is mandatory. In the very improbable case it cannot be completed, the signature will fail and the user will be asked to retry. **Additional fee applies**|
     * @type {number}
     * @memberof EzsignfoldertypeResponseV3
     */
    /*'fkiEzsigntsarequirementID'?: number;*/
    'fkiEzsigntsarequirementID'?: number;
    /**
     * The Description of the Branding in the language of the requester
     * @type {string}
     * @memberof EzsignfoldertypeResponseV3
     */
    /*'sBrandingDescriptionX': string;*/
    'sBrandingDescriptionX': string;
    /**
     * The description of the Billingentityinternal in the language of the requester
     * @type {string}
     * @memberof EzsignfoldertypeResponseV3
     */
    /*'sBillingentityinternalDescriptionX'?: string;*/
    'sBillingentityinternalDescriptionX'?: string;
    /**
     * The description of the Ezsigntsarequirement in the language of the requester
     * @type {string}
     * @memberof EzsignfoldertypeResponseV3
     */
    /*'sEzsigntsarequirementDescriptionX'?: string;*/
    'sEzsigntsarequirementDescriptionX'?: string;
    /**
     * The email address.
     * @type {string}
     * @memberof EzsignfoldertypeResponseV3
     */
    /*'sEmailAddressSigned'?: string;*/
    'sEmailAddressSigned'?: string;
    /**
     * The email address.
     * @type {string}
     * @memberof EzsignfoldertypeResponseV3
     */
    /*'sEmailAddressSummary'?: string;*/
    'sEmailAddressSummary'?: string;
    /**
     * 
     * @type {FieldEEzsignfoldertypePrivacylevel}
     * @memberof EzsignfoldertypeResponseV3
     */
    /*'eEzsignfoldertypePrivacylevel': FieldEEzsignfoldertypePrivacylevel;*/
    'eEzsignfoldertypePrivacylevel': FieldEEzsignfoldertypePrivacylevel;
    /**
     * 
     * @type {FieldEEzsignfoldertypeSendreminderfrequency}
     * @memberof EzsignfoldertypeResponseV3
     */
    /*'eEzsignfoldertypeSendreminderfrequency'?: FieldEEzsignfoldertypeSendreminderfrequency;*/
    'eEzsignfoldertypeSendreminderfrequency'?: FieldEEzsignfoldertypeSendreminderfrequency;
    /**
     * The number of days before the archival of Ezsignfolders created using this Ezsignfoldertype
     * @type {number}
     * @memberof EzsignfoldertypeResponseV3
     */
    /*'iEzsignfoldertypeArchivaldays': number;*/
    'iEzsignfoldertypeArchivaldays': number;
    /**
     * 
     * @type {FieldEEzsignfoldertypeDisposal}
     * @memberof EzsignfoldertypeResponseV3
     */
    /*'eEzsignfoldertypeDisposal': FieldEEzsignfoldertypeDisposal;*/
    'eEzsignfoldertypeDisposal': FieldEEzsignfoldertypeDisposal;
    /**
     * 
     * @type {FieldEEzsignfoldertypeCompletion}
     * @memberof EzsignfoldertypeResponseV3
     */
    /*'eEzsignfoldertypeCompletion': FieldEEzsignfoldertypeCompletion;*/
    'eEzsignfoldertypeCompletion': FieldEEzsignfoldertypeCompletion;
    /**
     * The number of days after the archival before the disposal of the Ezsignfolder
     * @type {number}
     * @memberof EzsignfoldertypeResponseV3
     */
    /*'iEzsignfoldertypeDisposaldays'?: number;*/
    'iEzsignfoldertypeDisposaldays'?: number;
    /**
     * The number of days to get all Ezsignsignatures
     * @type {number}
     * @memberof EzsignfoldertypeResponseV3
     */
    /*'iEzsignfoldertypeDeadlinedays': number;*/
    'iEzsignfoldertypeDeadlinedays': number;
    /**
     * Wheter if delegation of signature is allowed to another user or not
     * @type {boolean}
     * @memberof EzsignfoldertypeResponseV3
     */
    /*'bEzsignfoldertypeDelegate'?: boolean;*/
    'bEzsignfoldertypeDelegate'?: boolean;
    /**
     * Wheter if creating a new Discussion is allowed or not
     * @type {boolean}
     * @memberof EzsignfoldertypeResponseV3
     */
    /*'bEzsignfoldertypeDiscussion'?: boolean;*/
    'bEzsignfoldertypeDiscussion'?: boolean;
    /**
     * Wheter if Reassignment of signature is allowed by a signatory to another signatory or not
     * @type {boolean}
     * @memberof EzsignfoldertypeResponseV3
     */
    /*'bEzsignfoldertypeReassignezsignsigner'?: boolean;*/
    'bEzsignfoldertypeReassignezsignsigner'?: boolean;
    /**
     * Wheter if Reassignment of signature is allowed by a user to a signatory or another user or not
     * @type {boolean}
     * @memberof EzsignfoldertypeResponseV3
     */
    /*'bEzsignfoldertypeReassignuser'?: boolean;*/
    'bEzsignfoldertypeReassignuser'?: boolean;
    /**
     * Whether we send an email to Ezsignsigner  when document is completed
     * @type {boolean}
     * @memberof EzsignfoldertypeResponseV3
     */
    /*'bEzsignfoldertypeSendsignedtoezsignsigner'?: boolean;*/
    'bEzsignfoldertypeSendsignedtoezsignsigner'?: boolean;
    /**
     * Whether we send an email to User who signed when document is completed
     * @type {boolean}
     * @memberof EzsignfoldertypeResponseV3
     */
    /*'bEzsignfoldertypeSendsignedtouser'?: boolean;*/
    'bEzsignfoldertypeSendsignedtouser'?: boolean;
    /**
     * Whether we send the Ezsigndocument in the email to Ezsignsigner
     * @type {boolean}
     * @memberof EzsignfoldertypeResponseV3
     */
    /*'bEzsignfoldertypeSendattachmentezsignsigner'?: boolean;*/
    'bEzsignfoldertypeSendattachmentezsignsigner'?: boolean;
    /**
     * Whether we send the proof in the email to Ezsignsigner
     * @type {boolean}
     * @memberof EzsignfoldertypeResponseV3
     */
    /*'bEzsignfoldertypeSendproofezsignsigner'?: boolean;*/
    'bEzsignfoldertypeSendproofezsignsigner'?: boolean;
    /**
     * Whether we send the Ezsigndocument in the email to User
     * @type {boolean}
     * @memberof EzsignfoldertypeResponseV3
     */
    /*'bEzsignfoldertypeSendattachmentuser'?: boolean;*/
    'bEzsignfoldertypeSendattachmentuser'?: boolean;
    /**
     * Whether we send the proof in the email to User
     * @type {boolean}
     * @memberof EzsignfoldertypeResponseV3
     */
    /*'bEzsignfoldertypeSendproofuser'?: boolean;*/
    'bEzsignfoldertypeSendproofuser'?: boolean;
    /**
     * Whether we send the proof in the email to external recipient
     * @type {boolean}
     * @memberof EzsignfoldertypeResponseV3
     */
    /*'bEzsignfoldertypeSendproofemail'?: boolean;*/
    'bEzsignfoldertypeSendproofemail'?: boolean;
    /**
     * Whether we allow the Ezsigndocument to be downloaded by an Ezsignsigner
     * @type {boolean}
     * @memberof EzsignfoldertypeResponseV3
     */
    /*'bEzsignfoldertypeAllowdownloadattachmentezsignsigner'?: boolean;*/
    'bEzsignfoldertypeAllowdownloadattachmentezsignsigner'?: boolean;
    /**
     * Whether we allow the proof to be downloaded by an Ezsignsigner
     * @type {boolean}
     * @memberof EzsignfoldertypeResponseV3
     */
    /*'bEzsignfoldertypeAllowdownloadproofezsignsigner'?: boolean;*/
    'bEzsignfoldertypeAllowdownloadproofezsignsigner'?: boolean;
    /**
     * Whether we send the proof to user and Ezsignsigner who receive all documents.
     * @type {boolean}
     * @memberof EzsignfoldertypeResponseV3
     */
    /*'bEzsignfoldertypeSendproofreceivealldocument'?: boolean;*/
    'bEzsignfoldertypeSendproofreceivealldocument'?: boolean;
    /**
     * Whether we send the signed Ezsigndocument to the Ezsigndocument\'s owner
     * @type {boolean}
     * @memberof EzsignfoldertypeResponseV3
     */
    /*'bEzsignfoldertypeSendsignedtodocumentowner': boolean;*/
    'bEzsignfoldertypeSendsignedtodocumentowner': boolean;
    /**
     * Whether we send the signed Ezsigndocument to the Ezsignfolder\'s owner
     * @type {boolean}
     * @memberof EzsignfoldertypeResponseV3
     */
    /*'bEzsignfoldertypeSendsignedtofolderowner': boolean;*/
    'bEzsignfoldertypeSendsignedtofolderowner': boolean;
    /**
     * Whether we send the signed Ezsigndocument to the Usergroup that has acces to all Ezsignfolders
     * @type {boolean}
     * @memberof EzsignfoldertypeResponseV3
     */
    /*'bEzsignfoldertypeSendsignedtofullgroup'?: boolean;*/
    'bEzsignfoldertypeSendsignedtofullgroup'?: boolean;
    /**
     * THIS FIELD WILL BE DELETED. Whether we send the signed Ezsigndocument to the Usergroup that has acces to only their own Ezsignfolders
     * @type {boolean}
     * @memberof EzsignfoldertypeResponseV3
     */
    /*'bEzsignfoldertypeSendsignedtolimitedgroup'?: boolean;*/
    'bEzsignfoldertypeSendsignedtolimitedgroup'?: boolean;
    /**
     * Whether we send the signed Ezsigndocument to the colleagues
     * @type {boolean}
     * @memberof EzsignfoldertypeResponseV3
     */
    /*'bEzsignfoldertypeSendsignedtocolleague': boolean;*/
    'bEzsignfoldertypeSendsignedtocolleague': boolean;
    /**
     * Whether we send the summary to the Ezsigndocument\'s owner
     * @type {boolean}
     * @memberof EzsignfoldertypeResponseV3
     */
    /*'bEzsignfoldertypeSendsummarytodocumentowner': boolean;*/
    'bEzsignfoldertypeSendsummarytodocumentowner': boolean;
    /**
     * Whether we send the summary to the Ezsignfolder\'s owner
     * @type {boolean}
     * @memberof EzsignfoldertypeResponseV3
     */
    /*'bEzsignfoldertypeSendsummarytofolderowner': boolean;*/
    'bEzsignfoldertypeSendsummarytofolderowner': boolean;
    /**
     * Whether we send the summary to the Usergroup that has acces to all Ezsignfolders
     * @type {boolean}
     * @memberof EzsignfoldertypeResponseV3
     */
    /*'bEzsignfoldertypeSendsummarytofullgroup'?: boolean;*/
    'bEzsignfoldertypeSendsummarytofullgroup'?: boolean;
    /**
     * Whether we send the summary to the Usergroup that has acces to only their own Ezsignfolders
     * @type {boolean}
     * @memberof EzsignfoldertypeResponseV3
     */
    /*'bEzsignfoldertypeSendsummarytolimitedgroup'?: boolean;*/
    'bEzsignfoldertypeSendsummarytolimitedgroup'?: boolean;
    /**
     * Whether we send the summary to the colleagues
     * @type {boolean}
     * @memberof EzsignfoldertypeResponseV3
     */
    /*'bEzsignfoldertypeSendsummarytocolleague': boolean;*/
    'bEzsignfoldertypeSendsummarytocolleague': boolean;
    /**
     * Whether the Ezsignfoldertype is active or not
     * @type {boolean}
     * @memberof EzsignfoldertypeResponseV3
     */
    /*'bEzsignfoldertypeIsactive': boolean;*/
    'bEzsignfoldertypeIsactive': boolean;
    /**
     * 
     * @type {Array<UserlogintypeResponse>}
     * @memberof EzsignfoldertypeResponseV3
     */
    /*'a_objUserlogintype': Array<UserlogintypeResponse>;*/
    'a_objUserlogintype': Array<UserlogintypeResponse>;
    /**
     * 
     * @type {Array<UsergroupResponse>}
     * @memberof EzsignfoldertypeResponseV3
     */
    /*'a_objUsergroupAll'?: Array<UsergroupResponse>;*/
    'a_objUsergroupAll'?: Array<UsergroupResponse>;
    /**
     * 
     * @type {Array<UsergroupResponse>}
     * @memberof EzsignfoldertypeResponseV3
     */
    /*'a_objUsergroupRestricted'?: Array<UsergroupResponse>;*/
    'a_objUsergroupRestricted'?: Array<UsergroupResponse>;
    /**
     * 
     * @type {Array<UsergroupResponse>}
     * @memberof EzsignfoldertypeResponseV3
     */
    /*'a_objUsergroupTemplate'?: Array<UsergroupResponse>;*/
    'a_objUsergroupTemplate'?: Array<UsergroupResponse>;
}


/**
 * @import
 * Imports Child Data Object
 */
// @ts-ignore
import { DataObjectMultilingualEzsignfoldertypeName } from './'
// @ts-ignore
import { ValidationObjectMultilingualEzsignfoldertypeName } from './'

/**
 * @export 
 * A EzsignfoldertypeResponseV3 Data Object with automatic temporary default value
 * Use this object only for create an empty data object to assign a response from server
 * @class DataObjectEzsignfoldertypeResponseV3
 */
export class DataObjectEzsignfoldertypeResponseV3 {
   pkiEzsignfoldertypeID:number = 0
   objEzsignfoldertypeName:MultilingualEzsignfoldertypeName = new DataObjectMultilingualEzsignfoldertypeName()
   fkiBrandingID:number = 0
   fkiBillingentityinternalID?:number = undefined
   fkiEzsigntsarequirementID?:number = undefined
   sBrandingDescriptionX:string = ''
   sBillingentityinternalDescriptionX?:string = undefined
   sEzsigntsarequirementDescriptionX?:string = undefined
   sEmailAddressSigned?:string = undefined
   sEmailAddressSummary?:string = undefined
   eEzsignfoldertypePrivacylevel:FieldEEzsignfoldertypePrivacylevel = 'User'
   eEzsignfoldertypeSendreminderfrequency?:FieldEEzsignfoldertypeSendreminderfrequency = undefined
   iEzsignfoldertypeArchivaldays:number = 0
   eEzsignfoldertypeDisposal:FieldEEzsignfoldertypeDisposal = 'No'
   eEzsignfoldertypeCompletion:FieldEEzsignfoldertypeCompletion = 'PerEzsigndocument'
   iEzsignfoldertypeDisposaldays?:number = undefined
   iEzsignfoldertypeDeadlinedays:number = 0
   bEzsignfoldertypeDelegate?:boolean = undefined
   bEzsignfoldertypeDiscussion?:boolean = undefined
   bEzsignfoldertypeReassignezsignsigner?:boolean = undefined
   bEzsignfoldertypeReassignuser?:boolean = undefined
   bEzsignfoldertypeSendsignedtoezsignsigner?:boolean = undefined
   bEzsignfoldertypeSendsignedtouser?:boolean = undefined
   bEzsignfoldertypeSendattachmentezsignsigner?:boolean = undefined
   bEzsignfoldertypeSendproofezsignsigner?:boolean = undefined
   bEzsignfoldertypeSendattachmentuser?:boolean = undefined
   bEzsignfoldertypeSendproofuser?:boolean = undefined
   bEzsignfoldertypeSendproofemail?:boolean = undefined
   bEzsignfoldertypeAllowdownloadattachmentezsignsigner?:boolean = undefined
   bEzsignfoldertypeAllowdownloadproofezsignsigner?:boolean = undefined
   bEzsignfoldertypeSendproofreceivealldocument?:boolean = undefined
   bEzsignfoldertypeSendsignedtodocumentowner:boolean = false
   bEzsignfoldertypeSendsignedtofolderowner:boolean = false
   bEzsignfoldertypeSendsignedtofullgroup?:boolean = undefined
   bEzsignfoldertypeSendsignedtolimitedgroup?:boolean = undefined
   bEzsignfoldertypeSendsignedtocolleague:boolean = false
   bEzsignfoldertypeSendsummarytodocumentowner:boolean = false
   bEzsignfoldertypeSendsummarytofolderowner:boolean = false
   bEzsignfoldertypeSendsummarytofullgroup?:boolean = undefined
   bEzsignfoldertypeSendsummarytolimitedgroup?:boolean = undefined
   bEzsignfoldertypeSendsummarytocolleague:boolean = false
   bEzsignfoldertypeIsactive:boolean = false
   a_objUserlogintype:Array<UserlogintypeResponse> = []
   a_objUsergroupAll?:Array<UsergroupResponse> = undefined
   a_objUsergroupRestricted?:Array<UsergroupResponse> = undefined
   a_objUsergroupTemplate?:Array<UsergroupResponse> = undefined
}

/**
 * @export 
 * A EzsignfoldertypeResponseV3 Validation Object
 * @class ValidationObjectEzsignfoldertypeResponseV3
 */
export class ValidationObjectEzsignfoldertypeResponseV3 {
   pkiEzsignfoldertypeID = {
      type: 'integer',
      minimum: 0,
      maximum: 65535,
      required: true
   }
   objEzsignfoldertypeName = new ValidationObjectMultilingualEzsignfoldertypeName()
   fkiBrandingID = {
      type: 'integer',
      minimum: 0,
      required: true
   }
   fkiBillingentityinternalID = {
      type: 'integer',
      minimum: 0,
      required: false
   }
   fkiEzsigntsarequirementID = {
      type: 'integer',
      minimum: 1,
      maximum: 3,
      required: false
   }
   sBrandingDescriptionX = {
      type: 'string',
      required: true
   }
   sBillingentityinternalDescriptionX = {
      type: 'string',
      required: false
   }
   sEzsigntsarequirementDescriptionX = {
      type: 'string',
      required: false
   }
   sEmailAddressSigned = {
      type: 'string',
      pattern: '/^[\w.%+\-!#$%&amp;&#39;*+\\/&#x3D;?^&#x60;{|}~]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,20}$/',
      required: false
   }
   sEmailAddressSummary = {
      type: 'string',
      pattern: '/^[\w.%+\-!#$%&amp;&#39;*+\\/&#x3D;?^&#x60;{|}~]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,20}$/',
      required: false
   }
   eEzsignfoldertypePrivacylevel = {
      type: 'enum',
      allowableValues: ['User','Usergroup'],
      required: true
   }
   eEzsignfoldertypeSendreminderfrequency = {
      type: 'enum',
      allowableValues: ['None','Daily','Weekly'],
      required: false
   }
   iEzsignfoldertypeArchivaldays = {
      type: 'integer',
      minimum: 0,
      maximum: 180,
      required: true
   }
   eEzsignfoldertypeDisposal = {
      type: 'enum',
      allowableValues: ['No','Manual','Automatic'],
      required: true
   }
   eEzsignfoldertypeCompletion = {
      type: 'enum',
      allowableValues: ['PerEzsigndocument','PerEzsignfolder'],
      required: true
   }
   iEzsignfoldertypeDisposaldays = {
      type: 'integer',
      minimum: 0,
      maximum: 9999,
      required: false
   }
   iEzsignfoldertypeDeadlinedays = {
      type: 'integer',
      minimum: 1,
      maximum: 60,
      required: true
   }
   bEzsignfoldertypeDelegate = {
      type: 'boolean',
      required: false
   }
   bEzsignfoldertypeDiscussion = {
      type: 'boolean',
      required: false
   }
   bEzsignfoldertypeReassignezsignsigner = {
      type: 'boolean',
      required: false
   }
   bEzsignfoldertypeReassignuser = {
      type: 'boolean',
      required: false
   }
   bEzsignfoldertypeSendsignedtoezsignsigner = {
      type: 'boolean',
      required: false
   }
   bEzsignfoldertypeSendsignedtouser = {
      type: 'boolean',
      required: false
   }
   bEzsignfoldertypeSendattachmentezsignsigner = {
      type: 'boolean',
      required: false
   }
   bEzsignfoldertypeSendproofezsignsigner = {
      type: 'boolean',
      required: false
   }
   bEzsignfoldertypeSendattachmentuser = {
      type: 'boolean',
      required: false
   }
   bEzsignfoldertypeSendproofuser = {
      type: 'boolean',
      required: false
   }
   bEzsignfoldertypeSendproofemail = {
      type: 'boolean',
      required: false
   }
   bEzsignfoldertypeAllowdownloadattachmentezsignsigner = {
      type: 'boolean',
      required: false
   }
   bEzsignfoldertypeAllowdownloadproofezsignsigner = {
      type: 'boolean',
      required: false
   }
   bEzsignfoldertypeSendproofreceivealldocument = {
      type: 'boolean',
      required: false
   }
   bEzsignfoldertypeSendsignedtodocumentowner = {
      type: 'boolean',
      required: true
   }
   bEzsignfoldertypeSendsignedtofolderowner = {
      type: 'boolean',
      required: true
   }
   bEzsignfoldertypeSendsignedtofullgroup = {
      type: 'boolean',
      required: false
   }
   bEzsignfoldertypeSendsignedtolimitedgroup = {
      type: 'boolean',
      required: false
   }
   bEzsignfoldertypeSendsignedtocolleague = {
      type: 'boolean',
      required: true
   }
   bEzsignfoldertypeSendsummarytodocumentowner = {
      type: 'boolean',
      required: true
   }
   bEzsignfoldertypeSendsummarytofolderowner = {
      type: 'boolean',
      required: true
   }
   bEzsignfoldertypeSendsummarytofullgroup = {
      type: 'boolean',
      required: false
   }
   bEzsignfoldertypeSendsummarytolimitedgroup = {
      type: 'boolean',
      required: false
   }
   bEzsignfoldertypeSendsummarytocolleague = {
      type: 'boolean',
      required: true
   }
   bEzsignfoldertypeIsactive = {
      type: 'boolean',
      required: true
   }
   a_objUserlogintype = {
      type: 'array',
      required: true
   }
   a_objUsergroupAll = {
      type: 'array',
      required: false
   }
   a_objUsergroupRestricted = {
      type: 'array',
      required: false
   }
   a_objUsergroupTemplate = {
      type: 'array',
      required: false
   }
} 


