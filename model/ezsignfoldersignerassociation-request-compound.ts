/* tslint:disable */
/* eslint-disable */
/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


// May contain unused imports in some cases
// @ts-ignore
import { EzsignfoldersignerassociationRequest } from './ezsignfoldersignerassociation-request';
// May contain unused imports in some cases
// @ts-ignore
import { EzsignsignerRequestCompound } from './ezsignsigner-request-compound';

/**
 * @type EzsignfoldersignerassociationRequestCompound
 * An Ezsignfoldersignerassociation Object and children to create a complete structure
 * @export
 */
/*export type EzsignfoldersignerassociationRequestCompound = EzsignfoldersignerassociationRequest;*/
export interface EzsignfoldersignerassociationRequestCompound {
    /**
     * The unique ID of the Ezsignfoldersignerassociation
     * @type {number}
     * @memberof EzsignfoldersignerassociationRequestCompound
     */
    pkiEzsignfoldersignerassociationID?:number 
    /**
     * The unique ID of the User
     * @type {number}
     * @memberof EzsignfoldersignerassociationRequestCompound
     */
    fkiUserID?:number 
    /**
     * The unique ID of the Ezsignsignergroup
     * @type {number}
     * @memberof EzsignfoldersignerassociationRequestCompound
     */
    fkiEzsignsignergroupID?:number 
    /**
     * The unique ID of the Ezsignfolder
     * @type {number}
     * @memberof EzsignfoldersignerassociationRequestCompound
     */
    fkiEzsignfolderID:number 
    /**
     * If this flag is true. The signatory will receive a copy of every signed Ezsigndocument even if it ain\'t required to sign the document.
     * @type {boolean}
     * @memberof EzsignfoldersignerassociationRequestCompound
     */
    bEzsignfoldersignerassociationReceivecopy?:boolean 
    /**
     * A custom text message that will be added to the email sent.
     * @type {string}
     * @memberof EzsignfoldersignerassociationRequestCompound
     */
    tEzsignfoldersignerassociationMessage?:string 
    /**
     * 
     * @type {EzsignsignerRequestCompound}
     * @memberof EzsignfoldersignerassociationRequestCompound
     */
    objEzsignsigner?:EzsignsignerRequestCompound 
}


/**
 * @import
 * Imports Child Data Object
 */
// @ts-ignore
import { DataObjectEzsignsignerRequestCompound } from './'
// @ts-ignore
import { ValidationObjectEzsignsignerRequestCompound } from './'

/**
 * @export 
 * A EzsignfoldersignerassociationRequestCompound Data Object with automatic temporary default value
 * Use this object only for create an empty data object to assign a response from server
 * @class DataObjectEzsignfoldersignerassociationRequestCompound
 */
export class DataObjectEzsignfoldersignerassociationRequestCompound {
    pkiEzsignfoldersignerassociationID?:number = undefined
    fkiUserID?:number = undefined
    fkiEzsignsignergroupID?:number = undefined
    fkiEzsignfolderID:number = 0
    bEzsignfoldersignerassociationReceivecopy?:boolean = undefined
    tEzsignfoldersignerassociationMessage?:string = undefined
    objEzsignsigner?:EzsignsignerRequestCompound = undefined
}

/**
 * @export 
 * A EzsignfoldersignerassociationRequestCompound Validation Object
 * @class ValidationObjectEzsignfoldersignerassociationRequestCompound
 */
export class ValidationObjectEzsignfoldersignerassociationRequestCompound {
   pkiEzsignfoldersignerassociationID = {
      type: 'integer',
      minimum: 0,
      required: false
   }
   fkiUserID = {
      type: 'integer',
      minimum: 0,
      required: false
   }
   fkiEzsignsignergroupID = {
      type: 'integer',
      minimum: 0,
      maximum: 65535,
      required: false
   }
   fkiEzsignfolderID = {
      type: 'integer',
      minimum: 0,
      required: true
   }
   bEzsignfoldersignerassociationReceivecopy = {
      type: 'boolean',
      required: false
   }
   tEzsignfoldersignerassociationMessage = {
      type: 'string',
      required: false
   }
   objEzsignsigner = new ValidationObjectEzsignsignerRequestCompound()
} 


