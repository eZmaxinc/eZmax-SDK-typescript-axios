/* tslint:disable */
/* eslint-disable */
/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


// May contain unused imports in some cases
// @ts-ignore
import type { CustomContactNameResponse } from './custom-contact-name-response';
// May contain unused imports in some cases
// @ts-ignore
import type { CustomCreditcardtransactionResponse } from './custom-creditcardtransaction-response';
// May contain unused imports in some cases
// @ts-ignore
import type { CustomTimezoneWithCodeResponse } from './custom-timezone-with-code-response';
// May contain unused imports in some cases
// @ts-ignore
import type { EnumTextvalidation } from './enum-textvalidation';
// May contain unused imports in some cases
// @ts-ignore
import type { EzsignelementdependencyResponse } from './ezsignelementdependency-response';
// May contain unused imports in some cases
// @ts-ignore
import type { EzsignsignatureResponse } from './ezsignsignature-response';
// May contain unused imports in some cases
// @ts-ignore
import type { EzsignsignaturecustomdateResponse } from './ezsignsignaturecustomdate-response';
// May contain unused imports in some cases
// @ts-ignore
import type { FieldEEzsignsignatureAttachmentnamesource } from './field-eezsignsignature-attachmentnamesource';
// May contain unused imports in some cases
// @ts-ignore
import type { FieldEEzsignsignatureConsultationtrigger } from './field-eezsignsignature-consultationtrigger';
// May contain unused imports in some cases
// @ts-ignore
import type { FieldEEzsignsignatureDependencyrequirement } from './field-eezsignsignature-dependencyrequirement';
// May contain unused imports in some cases
// @ts-ignore
import type { FieldEEzsignsignatureFont } from './field-eezsignsignature-font';
// May contain unused imports in some cases
// @ts-ignore
import type { FieldEEzsignsignatureTooltipposition } from './field-eezsignsignature-tooltipposition';
// May contain unused imports in some cases
// @ts-ignore
import type { FieldEEzsignsignatureType } from './field-eezsignsignature-type';
// May contain unused imports in some cases
// @ts-ignore
import type { SignatureResponseCompound } from './signature-response-compound';

/**
 * @type EzsignsignatureResponseCompound
 * An Ezsignsignature Object and children to create a complete structure
 * @export
 */
/*export type EzsignsignatureResponseCompound = EzsignsignatureResponse;*/
export interface EzsignsignatureResponseCompound {
    /**
     * The date the Ezsignsignature was signed in folder\'s timezone
     * @type {string}
     * @memberof EzsignsignatureResponseCompound
     */
    dtEzsignsignatureDateInFolderTimezone?:string 
    /**
     * Whether the Ezsignsignature has a custom date format or not. (Only possible when eEzsignsignatureType is **Name** or **Handwritten**)
     * @type {boolean}
     * @memberof EzsignsignatureResponseCompound
     */
    bEzsignsignatureCustomdate?:boolean 
    /**
     * An array of custom date blocks that will be filled at the time of signature.  Can only be used if bEzsignsignatureCustomdate is true.  Use an empty array if you don\'t want to have a date at all.
     * @type {Array<EzsignsignaturecustomdateResponseCompound>}
     * @memberof EzsignsignatureResponseCompound
     */
    a_objEzsignsignaturecustomdate?:Array<EzsignsignaturecustomdateResponseCompound> 
    /**
     * 
     * @type {CustomCreditcardtransactionResponse}
     * @memberof EzsignsignatureResponseCompound
     */
    objCreditcardtransaction?:CustomCreditcardtransactionResponse 
    /**
     * 
     * @type {Array<EzsignelementdependencyResponseCompound>}
     * @memberof EzsignsignatureResponseCompound
     */
    a_objEzsignelementdependency?:Array<EzsignelementdependencyResponseCompound> 
    /**
     * 
     * @type {CustomTimezoneWithCodeResponse}
     * @memberof EzsignsignatureResponseCompound
     */
    objTimezone?:CustomTimezoneWithCodeResponse 
}



/**
 * @import
 * Imports Child Data Object
 */
// @ts-ignore
import { DataObjectCustomCreditcardtransactionResponse } from './'
// @ts-ignore
import { DataObjectCustomTimezoneWithCodeResponse } from './'
// @ts-ignore
import { ValidationObjectCustomCreditcardtransactionResponse } from './'
// @ts-ignore
import { ValidationObjectCustomTimezoneWithCodeResponse } from './'

/**
 * @export 
 * A EzsignsignatureResponseCompound Data Object with automatic temporary default value
 * Use this object only for create an empty data object to assign a response from server
 * @class DataObjectEzsignsignatureResponseCompound
 */
export class DataObjectEzsignsignatureResponseCompound {
    dtEzsignsignatureDateInFolderTimezone?:string = undefined
    bEzsignsignatureCustomdate?:boolean = undefined
    a_objEzsignsignaturecustomdate?:Array<EzsignsignaturecustomdateResponseCompound> = undefined
    objCreditcardtransaction?:CustomCreditcardtransactionResponse = undefined
    a_objEzsignelementdependency?:Array<EzsignelementdependencyResponseCompound> = undefined
    objTimezone?:CustomTimezoneWithCodeResponse = undefined
}

/**
 * @export 
 * A EzsignsignatureResponseCompound Validation Object
 * @class ValidationObjectEzsignsignatureResponseCompound
 */
export class ValidationObjectEzsignsignatureResponseCompound {
   dtEzsignsignatureDateInFolderTimezone = {
      type: 'string',
      pattern: /^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1]) ([01]?[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])$/,
      required: false
   }
   bEzsignsignatureCustomdate = {
      type: 'boolean',
      required: false
   }
   a_objEzsignsignaturecustomdate = {
      type: 'array',
      required: false
   }
   objCreditcardtransaction = new ValidationObjectCustomCreditcardtransactionResponse()
   a_objEzsignelementdependency = {
      type: 'array',
      required: false
   }
   objTimezone = new ValidationObjectCustomTimezoneWithCodeResponse()
} 


