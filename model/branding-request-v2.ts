/* tslint:disable */
/* eslint-disable */
/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


// May contain unused imports in some cases
// @ts-ignore
import { FieldEBrandingAlignlogo } from './field-ebranding-alignlogo';
// May contain unused imports in some cases
// @ts-ignore
import { FieldEBrandingLogo } from './field-ebranding-logo';
// May contain unused imports in some cases
// @ts-ignore
import { MultilingualBrandingDescription } from './multilingual-branding-description';

/**
 * A Branding Object
 * @export
 * @interface BrandingRequestV2
 */
export interface BrandingRequestV2 {
    /**
     * The unique ID of the Branding
     * @type {number}
     * @memberof BrandingRequestV2
     */
    /*'pkiBrandingID'?: number;*/
    'pkiBrandingID'?: number;
    /**
     * 
     * @type {MultilingualBrandingDescription}
     * @memberof BrandingRequestV2
     */
    /*'objBrandingDescription': MultilingualBrandingDescription;*/
    'objBrandingDescription': MultilingualBrandingDescription;
    /**
     * 
     * @type {FieldEBrandingLogo}
     * @memberof BrandingRequestV2
     */
    /*'eBrandingLogo': FieldEBrandingLogo;*/
    'eBrandingLogo': FieldEBrandingLogo;
    /**
     * 
     * @type {FieldEBrandingAlignlogo}
     * @memberof BrandingRequestV2
     */
    /*'eBrandingAlignlogo'?: FieldEBrandingAlignlogo;*/
    'eBrandingAlignlogo'?: FieldEBrandingAlignlogo;
    /**
     * The Base64 encoded binary content of the branding logo. This need to match image type selected in eBrandingLogo if you supply an image. If you select \'Default\', the logo will be deleted and the default one will be used.
     * @type {string}
     * @memberof BrandingRequestV2
     */
    /*'sBrandingBase64'?: string;*/
    'sBrandingBase64'?: string;
    /**
     * The primary color. This is a RGB color converted into integer
     * @type {number}
     * @memberof BrandingRequestV2
     */
    /*'iBrandingColor': number;*/
    'iBrandingColor': number;
    /**
     * The name of the Branding  This value will only be set if you wish to overwrite the default name. If you want to keep the default name, leave this property empty
     * @type {string}
     * @memberof BrandingRequestV2
     */
    /*'sBrandingName'?: string;*/
    'sBrandingName'?: string;
    /**
     * The email address.
     * @type {string}
     * @memberof BrandingRequestV2
     */
    /*'sEmailAddress'?: string;*/
    'sEmailAddress'?: string;
    /**
     * Whether the Branding is active or not
     * @type {boolean}
     * @memberof BrandingRequestV2
     */
    /*'bBrandingIsactive': boolean;*/
    'bBrandingIsactive': boolean;
}


/**
 * @import
 * Imports Child Data Object
 */
// @ts-ignore
import { DataObjectMultilingualBrandingDescription } from './'
// @ts-ignore
import { ValidationObjectMultilingualBrandingDescription } from './'

/**
 * @export 
 * A BrandingRequestV2 Data Object with automatic temporary default value
 * Use this object only for create an empty data object to assign a response from server
 * @class DataObjectBrandingRequestV2
 */
export class DataObjectBrandingRequestV2 {
   pkiBrandingID?:number = undefined
   objBrandingDescription:MultilingualBrandingDescription = new DataObjectMultilingualBrandingDescription()
   eBrandingLogo:FieldEBrandingLogo = 'Default'
   eBrandingAlignlogo?:FieldEBrandingAlignlogo = undefined
   sBrandingBase64?:string = undefined
   iBrandingColor:number = 0
   sBrandingName?:string = undefined
   sEmailAddress?:string = undefined
   bBrandingIsactive:boolean = false
}

/**
 * @export 
 * A BrandingRequestV2 Validation Object
 * @class ValidationObjectBrandingRequestV2
 */
export class ValidationObjectBrandingRequestV2 {
   pkiBrandingID = {
      type: 'integer',
      minimum: 0,
      required: false
   }
   objBrandingDescription = new ValidationObjectMultilingualBrandingDescription()
   eBrandingLogo = {
      type: 'enum',
      allowableValues: ['Default','JPEG','PNG'],
      required: true
   }
   eBrandingAlignlogo = {
      type: 'enum',
      allowableValues: ['Center','Left','Right'],
      required: false
   }
   sBrandingBase64 = {
      type: 'string',
      required: false
   }
   iBrandingColor = {
      type: 'integer',
      minimum: 0,
      maximum: 16777215,
      required: true
   }
   sBrandingName = {
      type: 'string',
      pattern: /^.{0,55}$/,
      required: false
   }
   sEmailAddress = {
      type: 'string',
      pattern: /^[\w.%+\-!#$%&'*+\/=?^`{|}~]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,20}$/,
      required: false
   }
   bBrandingIsactive = {
      type: 'boolean',
      required: true
   }
} 


