/* tslint:disable */
/* eslint-disable */
/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.2
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


// May contain unused imports in some cases
// @ts-ignore
import type { ContactinformationsRequestCompound } from './contactinformations-request-compound';
// May contain unused imports in some cases
// @ts-ignore
import type { FieldEContactType } from './field-econtact-type';

/**
 * A Contact Object
 * @export
 * @interface ContactRequestV2
 */
export interface ContactRequestV2 {
    /**
     * The unique ID of the Contacttitle.  Valid values:  |Value|Description| |-|-| |1|Ms.| |2|Mr.| |4|(Blank)| |5|Me (For Notaries)|
     * @type {number}
     * @memberof ContactRequestV2
     */
    /*'fkiContacttitleID': number;*/
    'fkiContacttitleID': number;
    /**
     * The unique ID of the Language.  Valid values:  |Value|Description| |-|-| |1|French| |2|English|
     * @type {number}
     * @memberof ContactRequestV2
     */
    /*'fkiLanguageID': number;*/
    'fkiLanguageID': number;
    /**
     * 
     * @type {FieldEContactType}
     * @memberof ContactRequestV2
     */
    /*'eContactType': FieldEContactType;*/
    'eContactType': FieldEContactType;
    /**
     * The First name of the contact
     * @type {string}
     * @memberof ContactRequestV2
     */
    /*'sContactFirstname': string;*/
    'sContactFirstname': string;
    /**
     * The Last name of the contact
     * @type {string}
     * @memberof ContactRequestV2
     */
    /*'sContactLastname': string;*/
    'sContactLastname': string;
    /**
     * The Company name of the contact
     * @type {string}
     * @memberof ContactRequestV2
     */
    /*'sContactCompany'?: string;*/
    'sContactCompany'?: string;
    /**
     * The Birth Date of the contact
     * @type {string}
     * @memberof ContactRequestV2
     */
    /*'dtContactBirthdate'?: string;*/
    'dtContactBirthdate'?: string;
    /**
     * The occupation of the Contact
     * @type {string}
     * @memberof ContactRequestV2
     */
    /*'sContactOccupation'?: string;*/
    'sContactOccupation'?: string;
    /**
     * The note of the Contact
     * @type {string}
     * @memberof ContactRequestV2
     */
    /*'tContactNote'?: string;*/
    'tContactNote'?: string;
    /**
     * Whether the contact is active or not
     * @type {boolean}
     * @memberof ContactRequestV2
     */
    /*'bContactIsactive'?: boolean;*/
    'bContactIsactive'?: boolean;
    /**
     * 
     * @type {ContactinformationsRequestCompound}
     * @memberof ContactRequestV2
     */
    /*'objContactinformations': ContactinformationsRequestCompound;*/
    'objContactinformations': ContactinformationsRequestCompound;
}


/**
 * @import
 * Imports Child Data Object
 */
// @ts-ignore
import { DataObjectContactinformationsRequestCompound } from './'
// @ts-ignore
import { ValidationObjectContactinformationsRequestCompound } from './'

/**
 * @export 
 * A ContactRequestV2 Data Object with automatic temporary default value
 * Use this object only for create an empty data object to assign a response from server
 * @class DataObjectContactRequestV2
 */
export class DataObjectContactRequestV2 {
   fkiContacttitleID:number = 0
   fkiLanguageID:number = 0
   eContactType:FieldEContactType = 'Agent'
   sContactFirstname:string = ''
   sContactLastname:string = ''
   sContactCompany?:string = undefined
   dtContactBirthdate?:string = undefined
   sContactOccupation?:string = undefined
   tContactNote?:string = undefined
   bContactIsactive?:boolean = undefined
   objContactinformations:ContactinformationsRequestCompound = new DataObjectContactinformationsRequestCompound()
}

/**
 * @export 
 * A ContactRequestV2 Validation Object
 * @class ValidationObjectContactRequestV2
 */
export class ValidationObjectContactRequestV2 {
   fkiContacttitleID = {
      type: 'integer',
      minimum: 0,
      required: true
   }
   fkiLanguageID = {
      type: 'integer',
      minimum: 1,
      maximum: 2,
      required: true
   }
   eContactType = {
      type: 'enum',
      allowableValues: ['Agent','Assistant','BankAccount','Borrower','Buyer','Company','ContractCreator','Creditcardmerchant','Customer','Depositreceipt','Employee','ExternalBroker','EzsignSigner','EzsignUser','EzcomAgent','EzcomApprover','FinancialInstitution','FranchiseBroker','Franchisefranchisecontact','Franchisefranchisesignatory','FranchiseOfficeBroker','FranchiseCompany','FranchiseOwner','Lead','MarketingCampaignSample','Notary','Payer','Petowner','PrivateTo','RewardMember','RewardRepresentative','Seller','Shared','Supplier','Survey','Inspector'],
      required: true
   }
   sContactFirstname = {
      type: 'string',
      pattern: /^.{1,20}$/,
      required: true
   }
   sContactLastname = {
      type: 'string',
      pattern: /^.{1,25}$/,
      required: true
   }
   sContactCompany = {
      type: 'string',
      required: false
   }
   dtContactBirthdate = {
      type: 'string',
      required: false
   }
   sContactOccupation = {
      type: 'string',
      pattern: /^.{0,50}$/,
      required: false
   }
   tContactNote = {
      type: 'string',
      pattern: /^.{0,32000}$/,
      required: false
   }
   bContactIsactive = {
      type: 'boolean',
      required: false
   }
   objContactinformations = new ValidationObjectContactinformationsRequestCompound()
} 


